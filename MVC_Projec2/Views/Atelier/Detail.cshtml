@model MVC_Projec2.ViewModels.AtelierCommentViewModel
@* @model Hall
 *@
@{
    ViewData["Title"] = "AtelierDetails";
}

<link rel="stylesheet" href="/css/DetailsStyle.css">
<link rel="stylesheet" href="/css/bootstrap.min.css">

<div class="container-fluid justify-content-center">
    <div class="row text-center justify-content-center">
        <h1 id="info" class="mb-3">Details Page</h1>
        <div class="col-lg-7 col-md-6 col-sm-12 row m-2" id="div1">
            <div class="carousel slide row text-center justify-content-center"
                 id="carouselDemo"
                 data-bs-wrap="true"
                 data-bs-ride="carousel" id="div1">
                <div class="carousel-inner" id="div1">

                    @for (int i = 0; i < Model.Atelier.Images.Count; i++)
                    {
                        var isActive = i == 0 ? "active" : "";
                        <div class="carousel-item @isActive" id="div1">
                            <p>@Model.Atelier.Images[i].ImageUrl</p>
                            <img src="~/images/@Model.Atelier.Images[i].ImageUrl" id="cr" />
                        </div>
                    }

                </div>

                <button class="carousel-control-prev"
                        type="button"
                        data-bs-target="#carouselDemo"
                        data-bs-slide="prev">
                    <span class="carousel-control-prev-icon"></span>
                </button>

                <button class="carousel-control-next"
                        type="button"
                        data-bs-target="#carouselDemo"
                        data-bs-slide="next">
                    <span class="carousel-control-next-icon"></span>
                </button>

                <div class="carousel-indicators w-50 position-relative">
                    @for (int i = 0; i < Model.Atelier.Images.Count; i++)
                    {
                        var isActive = i == 0 ? "active" : "";
                        <button type="button"
                                class="@isActive"
                                data-bs-target="#carouselDemo"
                                data-bs-slide-to="@i">
                            <img src="/images/@Model.Atelier.Images[i].ImageUrl" id="cr" />
                        </button>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-4 col-sm-12 m-2 justify-content-center row" id="details">
            <div id="infoDiv" class="align-items-center justify-content-start row">
                <h2>@Model.Atelier.Name</h2>
                <div id="text"><strong>Location : @Model.Atelier.Location</strong></div>
                <div id="text"><strong>Price : @Model.Atelier.priceRange</strong></div>
                <form asp-controller="Atelier" asp-action="GetAll" method="post">
                    <button id="btn" class="btn">Book Now</button>
                </form>
            </div>
            <form asp-controller="Atelier" asp-action="GetAll" method="post">
                <button id="btn" class="btn mt-5 w-75">Back to All Atlier</button>
            </form>
        </div>

    </div>
    <div class="row justify-content-center">
        <div id="comments">
            <h3>Comments</h3>
            <hr>
            @foreach (var comment in Model.Comments)
            {
                <div id="allComments" class="row justify-content-center text-center">
                    <strong>Name : <strong>@comment.User.FullName</strong> </strong>
                    <strong>content: </strong>
                    <p> @comment.Content</p>
                </div>
            }
        </div>
    </div>

    <div class="row justify-content-center">
        <div id="comments2" class="mt-5">
            <h3>Leave a Comment</h3>
            <hr>
            <form id="NewComment">
                <div class="mb-3">
                    <label class="form-label">Message</label>
                    <textarea class="form-control" rows="4" id="commentText" required placeholder="Write your Comment here"></textarea>
                </div>
                <button type="submit" class="btn" id="btn">Send Comment</button>
            </form>
        </div>

    </div>
</div>

<script src="/js/bootstrap.bundle.min.js"></script>


<input type="hidden" id="hallId" value="@Model.Atelier.Id" />
<input type="hidden" id="userName" value="@User.Identity.Name" />
<input type="hidden" id="serviceType" value="Hall" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/commentHub")
        .build();

    connection.on("NewCommentNotify", function (userName, message, serviceId, serviceType) {
        const currentServiceId = document.getElementById("hallId").value;
        const currentServiceType = document.getElementById("serviceType").value;

        if (serviceId == currentServiceId && serviceType == currentServiceType) {
            const commentDiv = document.createElement("div");
            commentDiv.innerHTML = `<strong>${userName}</strong>: ${message}`;
            document.getElementById("comments").appendChild(commentDiv);
            document.getElementById("comments").scrollTop = document.getElementById("comments").scrollHeight;
        }
    });

    connection.start()
    .then(() => {
        console.log("SignalR connection established successfully.");
    })
    .catch(err => {
        console.error("Error establishing SignalR connection: ", err.toString());
    });


    document.getElementById("NewComment").addEventListener("submit", function (e) {
        e.preventDefault();
        const userName = document.getElementById("userName").value;
        const message = document.getElementById("commentText").value;
        const serviceId = document.getElementById("hallId").value;
        const serviceType = document.getElementById("serviceType").value;

        connection.invoke("NewCommentArrived", userName, message, parseInt(serviceId), serviceType)
            .catch(err => console.error(err.toString()));

        document.getElementById("commentText").value = '';
    });
</script>


@* 
<input type="hidden" id="hallId" value="@Model.Hall.Id" />
<input type="hidden" id="userName" value="@User.Identity.Name" />
<input type="hidden" id="serviceType" value="Hall" />

<div id="commentsContainer">
    @foreach (var comment in Model.Comments)
    {
        <div><strong>@comment.User.FullName</strong>: @comment.Content</div>
    }
</div>

<form id="commentForm">
    <textarea id="commentText" required placeholder="Write your comment here..."></textarea>
    <button type="submit">Send</button>
</form>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/commentHub")
        .build();

    connection.on("NewCommentNotify", function (userName, message, serviceId, serviceType) {
        const currentServiceId = document.getElementById("hallId").value;
        const currentServiceType = document.getElementById("serviceType").value;

        if (serviceId == currentServiceId && serviceType == currentServiceType) {
            const commentDiv = document.createElement("div");
            commentDiv.innerHTML = `<strong>${userName}</strong>: ${message}`;
            document.getElementById("commentsContainer").appendChild(commentDiv);
            document.getElementById("commentsContainer").scrollTop = document.getElementById("commentsContainer").scrollHeight;
        }
    });

    connection.start()
    .then(() => {
        console.log("SignalR connection established successfully.");
    })
    .catch(err => {
        console.error("Error establishing SignalR connection: ", err.toString());
    });


    document.getElementById("commentForm").addEventListener("submit", function (e) {
        e.preventDefault();
        const userName = document.getElementById("userName").value;
        const message = document.getElementById("commentText").value;
        const serviceId = document.getElementById("hallId").value;
        const serviceType = document.getElementById("serviceType").value;

        connection.invoke("NewCommentArrived", userName, message, parseInt(serviceId), serviceType)
            .catch(err => console.error(err.toString()));

        document.getElementById("commentText").value = '';
    });
</script>
 *@
